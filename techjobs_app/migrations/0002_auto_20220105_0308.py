# Generated by Django 4.0 on 2022-01-05 06:08

from typing import List, Literal, Union
from enum import Enum
from django.db import migrations
from django.contrib.auth.models import Group, Permission

from collections.abc import Iterable

EPermissions = Union[
    Literal["add"], Literal["change"], Literal["delete"], Literal["view"]
]


def initial_permission_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    # CType = apps.get_model("contenttypes", "ContentType")

    def get_permissions_for_models(
        models: Iterable[str],
        input_permissions: List[EPermissions] = ["add", "change", "delete", "view"],
    ):
        out = []
        for model in models:
            codenames = []
            for perm in input_permissions:
                codenames.append(perm + "_" + model)
            permissions = Permission.objects.filter(codename__in=codenames).all()
            for each_perm in permissions:
                out.append(each_perm)
        return out

    def create_group(name: str, permissions: Iterable):
        group = Group(name=name)
        group.save()
        group.permissions.set(permissions)
        group.save()
        return group

    create_group(
        "Recrutador (guest)",
        get_permissions_for_models(["jobmodel"], ["add", "view"]),
    )
    create_group(
        "Aprovador",
        get_permissions_for_models(
            ["jobmodel", "jobauditmodel", "jobcommentmodel", "jobtagmodel"],
        ),
    )
    create_group("Administrador", get_permissions_for_models(["user"]))
    create_group(
        "Servi√ßo de Envio",
        [
            *get_permissions_for_models(["jobmodel"], ["view"]),
            *get_permissions_for_models(["jobauditmodel", "broadcastlogmodel"]),
        ],
    )


class Migration(migrations.Migration):

    dependencies = [
        ("techjobs_app", "0001_initial"),
    ]

    operations = [migrations.RunPython(initial_permission_groups)]
